{"ast":null,"code":"var _jsxFileName = \"/Users/finn/Desktop/APPS/TTB/text-to-banger/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport logo from './TTBwordmark.png';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tweetIdea, setTweetIdea] = useState('');\n  const [generatedTweet, setGeneratedTweet] = useState(null);\n  const [isLoading, setIsLoading] = useState(false); // Added loading state\n\n  const handleTweetIdeaChange = e => {\n    setTweetIdea(e.target.value);\n  };\n  const handleGenerateTweet = () => {\n    setIsLoading(true); // Set loading state to true when starting the request\n    // Send the tweet idea to the server to generate a tweet\n    fetch('http://localhost:3001/api/generate-tweet', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        tweetIdea\n      })\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(`An error occurred: ${response.statusText}`);\n      }\n      return response.json();\n    }).then(data => {\n      // Update the generated tweet with the data received from the server\n      setGeneratedTweet(data.generatedTweet);\n      setIsLoading(false); // Set loading state to false when request is complete\n    }).catch(error => {\n      console.error('An error occurred:', error);\n      setIsLoading(false); // Set loading state to false if an error occurs\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tweet-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"tweetIdea\",\n          value: tweetIdea,\n          onChange: handleTweetIdeaChange,\n          placeholder: \"What's happening?\",\n          rows: \"4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"tweet-button\",\n          onClick: handleGenerateTweet,\n          disabled: isLoading,\n          children: \"Generate Banger Tweet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"banger loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 23\n      }, this), \" \", generatedTweet && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: generatedTweet\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"tweet-button\",\n          href: `https://twitter.com/intent/tweet?text=${encodeURIComponent(generatedTweet)}`,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"Post Banger Tweet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"k0bJbuqw+09TgygZYy0db76B0rY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","logo","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","tweetIdea","setTweetIdea","generatedTweet","setGeneratedTweet","isLoading","setIsLoading","handleTweetIdeaChange","e","target","value","handleGenerateTweet","fetch","method","headers","body","JSON","stringify","then","response","ok","Error","statusText","json","data","catch","error","console","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","placeholder","rows","onClick","disabled","href","encodeURIComponent","rel","_c","$RefreshReg$"],"sources":["/Users/finn/Desktop/APPS/TTB/text-to-banger/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport logo from './TTBwordmark.png';\nimport './App.css';\n\nfunction App() {\n  const [tweetIdea, setTweetIdea] = useState('');\n  const [generatedTweet, setGeneratedTweet] = useState(null);\n  const [isLoading, setIsLoading] = useState(false); // Added loading state\n\n  const handleTweetIdeaChange = (e) => {\n    setTweetIdea(e.target.value);\n  }\n\n  const handleGenerateTweet = () => {\n    setIsLoading(true); // Set loading state to true when starting the request\n    // Send the tweet idea to the server to generate a tweet\n    fetch('http://localhost:3001/api/generate-tweet', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ tweetIdea })\n    })\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`An error occurred: ${response.statusText}`);\n      }\n      return response.json();\n    })\n    .then(data => {\n      // Update the generated tweet with the data received from the server\n      setGeneratedTweet(data.generatedTweet);\n      setIsLoading(false); // Set loading state to false when request is complete\n    })\n    .catch(error => {\n      console.error('An error occurred:', error);\n      setIsLoading(false); // Set loading state to false if an error occurs\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <div className=\"tweet-form\">\n          <textarea\n            id=\"tweetIdea\"\n            value={tweetIdea}\n            onChange={handleTweetIdeaChange}\n            placeholder=\"What's happening?\"\n            rows=\"4\"\n          />\n          <button className=\"tweet-button\" onClick={handleGenerateTweet} disabled={isLoading}>Generate Banger Tweet</button>\n        \n        </div>\n        {isLoading && <p>banger loading...</p>} {/* Show loading text */}\n        {generatedTweet && (\n          <>\n            <p>{generatedTweet}</p>\n            <a\n              className=\"tweet-button\"\n              href={`https://twitter.com/intent/tweet?text=${encodeURIComponent(generatedTweet)}`}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Post Banger Tweet\n            </a>\n          </>\n        )}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACU,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEnD,MAAMc,qBAAqB,GAAIC,CAAC,IAAK;IACnCN,YAAY,CAACM,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC9B,CAAC;EAED,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;IAChCL,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;IACpB;IACAM,KAAK,CAAC,0CAA0C,EAAE;MAChDC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEhB;MAAU,CAAC;IACpC,CAAC,CAAC,CACDiB,IAAI,CAACC,QAAQ,IAAI;MAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAE,sBAAqBF,QAAQ,CAACG,UAAW,EAAC,CAAC;MAC9D;MACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDL,IAAI,CAACM,IAAI,IAAI;MACZ;MACApB,iBAAiB,CAACoB,IAAI,CAACrB,cAAc,CAAC;MACtCG,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC,CACDmB,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC1CpB,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC;EACJ,CAAC;;EAED,oBACEV,OAAA;IAAKgC,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBjC,OAAA;MAAQgC,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC5BjC,OAAA;QAAKkC,GAAG,EAAEpC,IAAK;QAACkC,SAAS,EAAC,UAAU;QAACG,GAAG,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClDvC,OAAA;QAAKgC,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzBjC,OAAA;UACEwC,EAAE,EAAC,WAAW;UACd1B,KAAK,EAAET,SAAU;UACjBoC,QAAQ,EAAE9B,qBAAsB;UAChC+B,WAAW,EAAC,mBAAmB;UAC/BC,IAAI,EAAC;QAAG;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eACFvC,OAAA;UAAQgC,SAAS,EAAC,cAAc;UAACY,OAAO,EAAE7B,mBAAoB;UAAC8B,QAAQ,EAAEpC,SAAU;UAAAwB,QAAA,EAAC;QAAqB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAE/G,CAAC,EACL9B,SAAS,iBAAIT,OAAA;QAAAiC,QAAA,EAAG;MAAiB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,EAAC,GAAC,EACvChC,cAAc,iBACbP,OAAA,CAAAE,SAAA;QAAA+B,QAAA,gBACEjC,OAAA;UAAAiC,QAAA,EAAI1B;QAAc;UAAA6B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACvBvC,OAAA;UACEgC,SAAS,EAAC,cAAc;UACxBc,IAAI,EAAG,yCAAwCC,kBAAkB,CAACxC,cAAc,CAAE,EAAE;UACpFM,MAAM,EAAC,QAAQ;UACfmC,GAAG,EAAC,qBAAqB;UAAAf,QAAA,EAC1B;QAED;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA,eACJ,CACH;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACnC,EAAA,CAlEQD,GAAG;AAAA8C,EAAA,GAAH9C,GAAG;AAoEZ,eAAeA,GAAG;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}